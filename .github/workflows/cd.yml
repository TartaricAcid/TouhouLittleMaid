name: TouhouLittleMaid CD


# You can trigger this workflow manually or by running git tag v1.x.x and git push --tags
on:
  workflow_dispatch:
  push:
    tags:
      - 'v[0-9].[0-9]+.[0-9]+'
  pull_request:
    tags:
      - 'v[0-9].[0-9]+.[0-9]+'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Build with Gradle
        run: |
          chmod +x ./gradlew
          ./gradlew build
      
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v2.2.4
        with:
          name: tlm
          path: ./build/libs/*.jar
          
      - name: Create release and upload assets
        uses: actions/github-script@v4
        with:
          script: |
            const fs = require("fs").promises;
            if (context.ref.includes("tag")) {
              var release = await github.request("POST /repos/{owner}/{repo}/releases", {
                owner: context.repo.owner,
                repo: context.repo.repo,
                name: "TouhouLittleMaid",
                tag_name: context.ref.split("/")[2],
              });
            } else {
              var release = await github.request("POST /repos/{owner}/{repo}/releases", {
                owner: context.repo.owner,
                repo: context.repo.repo,
                name: "TouhouLittleMaid",
                tag_name: `snapshot-${context.sha}`,
                target_commitish: context.sha,
              });
            }
            for (const file of await fs.readdir("./build/libs/")) {
              await github.repos.uploadReleaseAsset({
                owner: context.repo.owner,
                repo: context.repo.repo,
                release_id: release.data.id,
                name: file,
                data: await fs.readFile("./build/libs/" + file),
              });
            }

            
      - name: Send file to Discord
        uses: sinshutu/upload-to-discord@master
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        with:
          args: ./build/libs/*.jar
